@using Syncfusion.EJ2.Blazor
@using Syncfusion.EJ2.Blazor.RichTextEditor
@using System.ComponentModel.DataAnnotations
@using Client.Shared
@inject HttpClient HttpClient

<div class="card mt-2 bg-dark">
    <div class="card-body">
        <div class="input-group">
            <div class="input-group-prepend">
                <span class="input-group-text" id="basic-addon3">Create File</span>
            </div>
            <input type="text" class="form-control" id="basic-url1" aria-describedby="basic-addon3" @bind-value:event="oninput" @bind-value="@owner" placeholder="Add Owner"/>
            <input type="text" class="form-control" id="basic-url2" aria-describedby="basic-addon4" @bind-value:event="oninput" @bind-value="@repoName" placeholder="Add Repo" />

            <a class="btn btn-primary ml-sm-1" @onclick="ShowEditor" href="">Show</a>
        </div>
    </div>
</div>

@if(showEditor) {

    <div class="main mt-3">
        <div class="card">
            <div class="card-body">
            <EjsRichTextEditor @bind-Value="@content" EditorMode="EditorMode.Markdown"> 
            
            </EjsRichTextEditor>
            <input type="text" class="form-control" @bind-value:event="oninput" @bind-value="@title" placeholder="Title of New File" />

            <button class="e-btn" type="submit" @onclick="async () => await CreateFile()">Submit</button>
            </div>
        </div>
    </div>
}

@code {

    [Parameter] public string owner { get; set; }
    [Parameter] public string repoName { get; set; }
    [Parameter] public string content { get; set; }
    [Parameter] public string title { get; set; }
    bool showEditor = false;

    private async Task CreateFile() {
        //IsLoading = true;
        var apiUrl = $"api/create/{owner}/{repoName}/{title}";
        var update = await HttpClient.PostJsonAsync<string>(apiUrl, content);
    }

    public void ShowEditor() {
        showEditor = true;
    }

}